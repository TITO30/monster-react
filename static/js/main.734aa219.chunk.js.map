{"version":3,"sources":["components/card/card.jsx","components/card-list/card-list.jsx","components/search-box/search-box.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","luchadores","id","name","email","CardList","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","bind","fetch","then","response","json","users","this","filteredLuchadores","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iVAKaA,EAAO,SAACC,GAAD,OAChB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,aAAaC,IAAG,+BAA0BH,EAAMI,WAAWC,GAA3C,4BACzB,6BAAKL,EAAMI,WAAWE,OACtB,4BAAIN,EAAMI,WAAWG,YCLhBC,EAAS,SAACR,GACnB,OACI,qBAAKC,UAAU,YAAf,SAEID,EAAMI,WAAWK,KAAI,SAAAL,GAAU,OAC3B,cAAC,EAAD,CAA0BA,WAAYA,GAA3BA,EAAWC,UCLzBK,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAYC,EAAd,EAAcA,aAAd,OACzB,uBACIX,UAAU,SACVY,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCuCCG,E,kDAzCb,aAAc,IAAD,8BACX,gBAgBAH,aAAe,SAACI,GACd,EAAKC,SAAS,CAACC,YAAaF,EAAEG,OAAOC,SAfvC,EAAKC,MAAO,CACVjB,WAAW,GACXc,YAAa,IAGf,EAAKN,aAAe,EAAKA,aAAaU,KAAlB,gBART,E,qDAWb,WAAoB,IAAD,OACjBC,MAAM,+CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKV,SAAS,CAACb,WAAWuB,S,oBAO3C,WAAS,IAAD,EAC2BC,KAAKP,MAA/BjB,EADD,EACCA,WAAWc,EADZ,EACYA,YACZW,EAAqBzB,EAAW0B,QAAO,SAAA1B,GAAU,OACrDA,EAAWE,KAAKyB,cAAcC,SAASd,EAAYa,kBACrD,OACE,sBAAK9B,UAAU,MAAf,UACA,oDACA,cAAC,EAAD,CACAU,YAAY,oBACZC,aAAcgB,KAAKhB,eAInB,cAAC,EAAD,CAAUR,WAAYyB,IARtB,W,GA3BYI,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.734aa219.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './card.style.css';\r\n\r\n\r\nexport const Card = (props) =>(\r\n    <div className='card-container'>\r\n        <img alt=\"luchadores\" src={`https://robohash.org/${props.luchadores.id}?set=set2&size=180x180`}/>\r\n        <h2>{props.luchadores.name}</h2>\r\n        <p>{props.luchadores.email}</p>\r\n    </div>\r\n)\r\n","import React from 'react';\r\nimport './card-list.styles.css';\r\nimport {Card} from '../card/card';\r\n\r\nexport const CardList=(props)=>{\r\n    return(\r\n        <div className='card-list'>\r\n        {\r\n            props.luchadores.map(luchadores => \r\n                <Card key={luchadores.id} luchadores={luchadores}/>\r\n                )\r\n        }\r\n    </div>)\r\n}","import React from 'react';\r\n\r\nimport './search-box.css';\r\n\r\nexport const SearchBox = ({placeholder,handleChange}) =>(\r\n<input \r\n    className='search'\r\n    type='search' \r\n    placeholder={placeholder}\r\n    onChange={handleChange}\r\n/>\r\n)   ","import './App.css';\nimport { CardList } from './components/card-list/card-list.jsx'\nimport { Component } from 'react';\nimport {SearchBox} from './components/search-box/search-box.jsx';\n\n\nclass App extends Component{\n  constructor(){\n    super();\n\n    this.state= {\n      luchadores:[],\n      searchField: ''\n    };\n    \n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users/')\n    .then(response => response.json())\n    .then(users => this.setState({luchadores:users}));\n  }\n\n    handleChange = (e)=>{\n      this.setState({searchField: e.target.value})\n    }\n\n  render(){\n    const{ luchadores,searchField} = this.state;\n    const filteredLuchadores = luchadores.filter(luchadores => \n      luchadores.name.toLowerCase().includes(searchField.toLowerCase()))\n    return(\n      <div className=\"App\">\n      <h1>Luchadores Rolodex</h1>\n      <SearchBox \n      placeholder='search luchadores'\n      handleChange={this.handleChange }/>\n      \n\n\n      <CardList luchadores={filteredLuchadores}></CardList>;\n      </div>\n    );\n  }\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}